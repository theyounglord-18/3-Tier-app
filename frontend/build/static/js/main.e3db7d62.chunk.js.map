{"version":3,"sources":["components/TodosApp.js","App.js","index.js"],"names":["API_URL","TodoApp","todos","setTodos","useState","title","setTitle","loading","setLoading","error","setError","fetchTodos","async","res","fetch","ok","Error","data","json","err","message","useEffect","_jsxs","style","maxWidth","margin","padding","border","borderRadius","children","_jsx","onSubmit","e","preventDefault","trim","method","headers","body","JSON","stringify","errData","marginBottom","type","value","onChange","target","placeholder","width","marginLeft","color","listStyle","map","todo","display","alignItems","onClick","id","toggleTodo","_id","textDecoration","completed","cursor","flex","deleteTodo","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kKAEA,MAAMA,EAAU,kCAiHDC,MA9GCA,KACZ,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,KAC5BG,EAASC,GAAcJ,oBAAS,IAChCK,EAAOC,GAAYN,mBAAS,IAG7BO,EAAaC,UACfJ,GAAW,GACXE,EAAS,IACT,IACI,MAAMG,QAAYC,MAAMd,GACxB,IAAKa,EAAIE,GAAI,MAAM,IAAIC,MAAM,yBAC7B,MAAMC,QAAaJ,EAAIK,OACvBf,EAASc,EACb,CAAE,MAAOE,GACLT,EAASS,EAAIC,QACjB,CACAZ,GAAW,IAGfa,oBAAU,KACNV,KACD,IAgDH,OACIW,eAAA,OAAKC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,YAAaC,QAAS,GAAIC,OAAQ,iBAAkBC,aAAc,GAAIC,SAAA,CACvGC,cAAA,MAAAD,SAAI,aACJP,eAAA,QAAMS,SAhDEnB,UAGZ,GAFAoB,EAAEC,iBACFvB,EAAS,IACJL,EAAM6B,OACX,IACI,MAAMrB,QAAYC,MAAM,kCAA8C,CAClEqB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAElC,YAE3B,IAAKQ,EAAIE,GAAI,CACT,MAAMyB,QAAgB3B,EAAIK,OAC1B,MAAM,IAAIF,MAAMwB,EAAQ/B,OAAS,qBACrC,CACAH,EAAS,IACTK,GACJ,CAAE,MAAOQ,GACLT,EAASS,EAAIC,QACjB,GA8B6BG,MAAO,CAAEkB,aAAc,IAAKZ,SAAA,CACjDC,cAAA,SACIY,KAAK,OACLC,MAAOtC,EACPuC,SAAUZ,GAAK1B,EAAS0B,EAAEa,OAAOF,OACjCG,YAAY,iBACZvB,MAAO,CAAEwB,MAAO,MAAOrB,QAAS,KAEpCI,cAAA,UAAQY,KAAK,SAASnB,MAAO,CAAEG,QAAS,EAAGsB,WAAY,GAAInB,SAAC,WAE/DpB,GAASqB,cAAA,KAAGP,MAAO,CAAE0B,MAAO,OAAQpB,SAAEpB,IACtCF,EACGuB,cAAA,KAAAD,SAAG,eAEHC,cAAA,MAAIP,MAAO,CAAE2B,UAAW,OAAQxB,QAAS,GAAIG,SACxC3B,EAAMiD,IAAIC,GACP9B,eAAA,MAAmBC,MAAO,CAAEkB,aAAc,GAAIY,QAAS,OAAQC,WAAY,UAAWzB,SAAA,CAClFC,cAAA,QACIyB,QAASA,IA5ClB3C,WACfF,EAAS,IACT,IAEI,WADkBI,MAAM,GAAGd,KAAWwD,WAAa,CAAErB,OAAQ,WACpDpB,GAAI,MAAM,IAAIC,MAAM,yBAC7BL,GACJ,CAAE,MAAOQ,GACLT,EAASS,EAAIC,QACjB,GAoCuCqC,CAAWL,EAAKM,KAC/BnC,MAAO,CACHoC,eAAgBP,EAAKQ,UAAY,eAAiB,OAClDC,OAAQ,UACRC,KAAM,GACRjC,SAEDuB,EAAK/C,QAEVyB,cAAA,UAAQyB,QAASA,IAzCtB3C,WACfF,EAAS,IACT,IAEI,WADkBI,MAAM,GAAGd,KAAWwD,IAAM,CAAErB,OAAQ,YAC7CpB,GAAI,MAAM,IAAIC,MAAM,yBAC7BL,GACJ,CAAE,MAAOQ,GACLT,EAASS,EAAIC,QACjB,GAiC2C2C,CAAWX,EAAKM,KAAMnC,MAAO,CAAEyB,WAAY,IAAKnB,SAAC,aAXnEuB,EAAKM,YCxFvBM,MAJf,WACI,OAAOlC,cAAC7B,EAAO,GACnB,ECDAgE,IAASC,OACPpC,cAACqC,IAAMC,WAAU,CAAAvC,SACfC,cAACkC,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.e3db7d62.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/api/todos`;\r\n\r\n\r\nconst TodoApp = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    // Fetch todos\r\n    const fetchTodos = async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const res = await fetch(API_URL);\r\n            if (!res.ok) throw new Error('Failed to fetch todos');\r\n            const data = await res.json();\r\n            setTodos(data);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, []);\r\n\r\n    // Add todo\r\n    const addTodo = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        if (!title.trim()) return;\r\n        try {\r\n            const res = await fetch(`${process.env.REACT_APP_API_URL}/api/todos`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ title }),\r\n            });\r\n            if (!res.ok) {\r\n                const errData = await res.json();\r\n                throw new Error(errData.error || 'Failed to add todo');\r\n            }\r\n            setTitle('');\r\n            fetchTodos();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Toggle todo\r\n    const toggleTodo = async (id) => {\r\n        setError('');\r\n        try {\r\n            const res = await fetch(`${API_URL}/${id}/toggle`, { method: 'PATCH' });\r\n            if (!res.ok) throw new Error('Failed to toggle todo');\r\n            fetchTodos();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    // Delete todo\r\n    const deleteTodo = async (id) => {\r\n        setError('');\r\n        try {\r\n            const res = await fetch(`${API_URL}/${id}`, { method: 'DELETE' });\r\n            if (!res.ok) throw new Error('Failed to delete todo');\r\n            fetchTodos();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ maxWidth: 400, margin: '2rem auto', padding: 20, border: '1px solid #ccc', borderRadius: 8 }}>\r\n            <h2>Todo App</h2>\r\n            <form onSubmit={addTodo} style={{ marginBottom: 20 }}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={e => setTitle(e.target.value)}\r\n                    placeholder=\"Add a new todo\"\r\n                    style={{ width: '70%', padding: 8 }}\r\n                />\r\n                <button type=\"submit\" style={{ padding: 8, marginLeft: 8 }}>Add</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <ul style={{ listStyle: 'none', padding: 0 }}>\r\n                    {todos.map(todo => (\r\n                        <li key={todo._id} style={{ marginBottom: 10, display: 'flex', alignItems: 'center' }}>\r\n                            <span\r\n                                onClick={() => toggleTodo(todo._id)}\r\n                                style={{\r\n                                    textDecoration: todo.completed ? 'line-through' : 'none',\r\n                                    cursor: 'pointer',\r\n                                    flex: 1,\r\n                                }}\r\n                            >\r\n                                {todo.title}\r\n                            </span>\r\n                            <button onClick={() => deleteTodo(todo._id)} style={{ marginLeft: 10 }}>Delete</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoApp;","import React from 'react';\r\nimport TodoApp from './components/TodosApp';\r\n\r\nfunction App() {\r\n    return <TodoApp />;\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}